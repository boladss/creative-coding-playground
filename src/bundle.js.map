{"version":3,"file":"bundle.js","mappings":"uFACA,MAAMA,EACJ,WAAAC,CACSC,EACAC,GADA,KAAAD,EAAAA,EACA,KAAAC,EAAAA,CACN,EAGL,MAAMC,EACJ,WAAAH,CACSI,EACCC,EACAC,EACAC,EACAC,EACAC,GALD,KAAAL,SAAAA,EACC,KAAAC,MAAAA,EACA,KAAAC,MAAAA,EACA,KAAAC,MAAAA,EACA,KAAAC,OAAAA,EACA,KAAAC,MAAAA,CACP,CAEH,MAAAC,CAAOC,EAAgBC,GACrBC,KAAKP,OAASO,KAAKR,KAGrB,CAEA,IAAAS,CAAKC,GACHA,EAAQC,UAAY,QAGpBD,EAAQE,OACRF,EAAQG,UAAUL,KAAKT,SAASH,EAAGY,KAAKT,SAASF,GACjDa,EAAQI,QAAQN,KAAKP,OAErBS,EAAQK,YACRL,EAAQM,KAAiB,IAAXR,KAAKN,MAAwB,IAAZM,KAAKL,OAAYK,KAAKN,MAAOM,KAAKL,QACjEO,EAAQO,OACRP,EAAQQ,SACV,EAIF,SAASC,EAAYb,EAAgBC,EAAgBN,GACnD,MAAML,EAAIU,EAAOV,EAAIW,EAASa,KAAKC,IAAIpB,GACjCJ,EAAIS,EAAOT,EAAIU,EAASa,KAAKE,IAAIrB,GAEvC,OAAO,IAAIP,EAAOE,EAAGC,EACvB,CAWA,mBAAiCa,EAAmCR,EAAeC,GACjF,MAAMoB,EAAuB,GACvBC,EAAuB,GAKvBlB,EAAS,IAAIZ,EAFA,GAARQ,EACS,GAATC,GAGLsB,EAAY,IAARvB,EACJwB,EAAa,EAATvB,EACJI,EAAiB,IAARL,EAETyB,EAAmB,CAACC,EAAqBC,KAC7C,IAAK,IAAIC,EAAI,EAAGA,EAXJ,GAWeA,IAAK,CAC9B,MACM7B,EADiB,IAvBhBmB,KAAKW,GAAK,IAwBKD,EAEhB/B,EAAWoB,EAAYb,EAAQC,EAAQN,GAG7C,IAAI+B,EAAY,IAAFP,EAEVzB,EAAQ6B,EAAO,MAAS,KAE5BD,EAASK,KAAK,IAAInC,EAAQC,EAAUC,EAAOC,EAAO+B,EAASN,EAAGI,GAChE,GAGFH,EAAiBJ,GAAW,GAC5BI,EAAiBH,GAAW,GAE5B,MAAMU,EAAU,KACdxB,EAAQC,UAAY,QACpBD,EAAQyB,SAAS,EAAG,EAAGjC,EAAOC,GAE9BoB,EAAUa,SAAQC,IAChBA,EAAQhC,OAAOC,EAAQC,GACvB8B,EAAQ5B,KAAKC,EAAQ,IAGvBc,EAAUY,SAAQC,IAChBA,EAAQhC,OAAOC,EAAQC,GACvB8B,EAAQ5B,KAAKC,EAAQ,IAMvB4B,YAAW,KACTC,OAAOC,sBAAsBN,EAAQ,GAHrB,IADR,GAKK,EAGjBA,GACF,C,2JC9GA,mBAIA,WACE,IAAIO,EAAUC,SAASC,eAAe,WAClCC,EAAWH,EAAQI,WAAW,MAClC,MAAMC,EAASL,EAAQvC,MACjB6C,EAAUN,EAAQtC,QACxB,aAASyC,EAAUE,EAAQC,EAC7B,CAEAC,E,GCZIC,EAA2B,CAAC,GAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,CAAC,GAOX,OAHAE,EAAoBL,GAAUM,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASJ,GAGpEK,EAAOD,OACf,CCnB0BJ,CAAoB,I","sources":["webpack:///./src/arcs.ts","webpack:///./src/script.ts","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"sourcesContent":["// Classes\r\nclass Vector {\r\n  constructor(\r\n    public x: number,\r\n    public y: number\r\n  ) {}\r\n}\r\n\r\nclass Segment {\r\n  constructor(\r\n    public position: Vector,\r\n    private speed: number,\r\n    private angle: number,\r\n    private width: number,\r\n    private height: number,\r\n    private label: number,\r\n  ) {}\r\n\r\n  update(center: Vector, radius: number): void {\r\n    this.angle += this.speed;\r\n    // this.position = getPosition(center, radius, this.angle);\r\n    // if (this.label === 50) console.log(this.label, this.position.x, this.position.y, this.angle);\r\n  }\r\n\r\n  draw(context: CanvasRenderingContext2D): void {\r\n    context.fillStyle = 'black';\r\n\r\n    // if (this.label === 50) context.fillStyle = 'red';\r\n    context.save();\r\n    context.translate(this.position.x, this.position.y);\r\n    context.rotate(-this.angle);\r\n\r\n    context.beginPath();\r\n    context.rect(-this.width*0.5, -this.height*0.5, this.width, this.height);\r\n    context.fill();\r\n    context.restore();\r\n  }\r\n}\r\n\r\n// Helper functions\r\nfunction getPosition(center: Vector, radius: number, angle: number): Vector {\r\n  const x = center.x + radius * Math.sin(angle);\r\n  const y = center.y + radius * Math.cos(angle);\r\n\r\n  return new Vector(x, y);\r\n}\r\n\r\nfunction degToRad(n: number) {\r\n  return n * Math.PI / 180;\r\n}\r\n\r\nfunction getRandom(min: number, max: number) {\r\n  return Math.random() * (max - min) + min;\r\n}\r\n\r\n// Main\r\nexport default function initArcs(context: CanvasRenderingContext2D, width: number, height: number): void {\r\n  const segments1: Segment[] = [];\r\n  const segments2: Segment[] = [];\r\n  const count = 50;\r\n\r\n  const cx = width * 0.5;\r\n  const cy = height * 0.5;\r\n  const center = new Vector(cx, cy);\r\n\r\n  const w = width * 0.01;\r\n  const h = height * 2;\r\n  const radius = width * 0.25;\r\n\r\n  const generateSegments = (segments: Segment[], flag: boolean) => {\r\n    for (let i = 0; i < count; i++) {\r\n      const slice = degToRad(360/count);\r\n      const angle = slice * i;\r\n  \r\n      const position = getPosition(center, radius, angle);\r\n  \r\n      // let wScaled = w * getRandom(0.1, 1);\r\n      let wScaled = w*0.25;\r\n\r\n      let speed = flag ? 0.005 : -0.005;\r\n\r\n      segments.push(new Segment(position, speed, angle, wScaled, h, i));\r\n    }\r\n  };\r\n\r\n  generateSegments(segments1, true);\r\n  generateSegments(segments2, false);\r\n\r\n  const animate = () => {\r\n    context.fillStyle = 'white';\r\n    context.fillRect(0, 0, width, height);\r\n  \r\n    segments1.forEach(segment => {\r\n      segment.update(center, radius);\r\n      segment.draw(context);\r\n    })\r\n\r\n    segments2.forEach(segment => {\r\n      segment.update(center, radius);\r\n      segment.draw(context);\r\n    })\r\n  \r\n    let fps = 60;\r\n    let fpsInterval = 1000/fps;\r\n  \r\n    setTimeout(() => {\r\n      window.requestAnimationFrame(animate);\r\n    }, fpsInterval);\r\n  };\r\n\r\n  animate();\r\n}","// Initialize Canvases\r\nimport initArcs from \"./arcs\";\r\n\r\n// function\r\n\r\nfunction init() {\r\n  let canvas1 = document.getElementById(\"canvas1\") as HTMLCanvasElement;\r\n  let context1 = canvas1.getContext('2d') as CanvasRenderingContext2D;\r\n  const width1 = canvas1.width;\r\n  const height1 = canvas1.height;\r\n  initArcs(context1, width1, height1);\r\n}\r\n\r\ninit();\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(659);\n"],"names":["Vector","constructor","x","y","Segment","position","speed","angle","width","height","label","update","center","radius","this","draw","context","fillStyle","save","translate","rotate","beginPath","rect","fill","restore","getPosition","Math","sin","cos","segments1","segments2","w","h","generateSegments","segments","flag","i","PI","wScaled","push","animate","fillRect","forEach","segment","setTimeout","window","requestAnimationFrame","canvas1","document","getElementById","context1","getContext","width1","height1","init","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}